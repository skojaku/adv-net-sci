---
title: "Exercises: Graph Neural Networks"
jupyter: advnetsci
execute:
    enabled: true
---

## Theoretical Exercises

### Pen and Paper Exercises

- [✍️ Pen and paper exercises](pen-and-paper/exercise.pdf)

The pen and paper exercises cover fundamental concepts including:

1. **Spectral Graph Theory**: Understanding eigenvalues and eigenvectors of graph matrices
2. **Fourier Analysis on Graphs**: Extending classical signal processing to graph domains
3. **Convolution Operations**: Defining convolution for irregular graph structures
4. **Message Passing**: Mathematical formulation of information aggregation in graphs
5. **Network Architecture Design**: Principles for designing effective GNN architectures

## Programming Exercises

### Coding Exercise: GCN Implementation

::: {.callout-note title="Exercise"}
:class: note

Let's implement a simple GCN model for node classification.
[Coding Exercise](../../../notebooks/legacy/exercise-m09-graph-neural-net.ipynb)
:::

This coding exercise will guide you through:

1. **Building a GCN from Scratch**: Implementing the basic GCN layer
2. **Node Classification**: Training GCN for semi-supervised node classification
3. **Spectral Filtering**: Understanding how GCNs relate to spectral graph theory
4. **Comparison with Other Methods**: Benchmarking against traditional approaches
