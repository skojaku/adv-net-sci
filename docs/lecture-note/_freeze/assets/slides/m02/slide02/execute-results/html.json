{
  "hash": "8da43be750ec05cc085c4733ded85d91",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nformat:\n  revealjs:\n    slide-number: true\n    chalkboard:\n      buttons: true\n    preview-links: auto\n    css: css/style.css\nhighlight-style: oblivion\njupyter: advnetsci\nexecute:\n    enabled: true\n    echo: false\n---\n\n# Module 02: Small World Networks\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\nAdvanced Topics in Network Science\n\nSadamori Kojaku\n\nskojaku@binghamton.edu\n\n:::\n\n::: {.column width=\"50%\"}\n\n![](https://skojaku.github.io/adv-net-sci/figs/milgram-small-world-experiment.png)\n\n:::\n:::\n\n---\n\nQuiz\n\nLet us denote the adjacency list of a directed graph as follows:\n\n```python\nneighbors = {\n    i: [j, k, ...]\n}\n```\n\nwhere $i, j, k, \\ldots$ are the nodes in a graph, and there are directed edge from $i$ to $j$ and from $i$ to $k$.\n\nIdentify the number of *strongly connected components* in the following graph.\n\n```python\nneighbors = {\n    a: [b],\n    b: [c, e, f],\n    c: [d, g],\n    d: [c, h],\n    e: [a, f],\n    f: [g],\n    g: [f],\n    h: [d, g],\n}\n```\n\n---\n\n## What You'll Learn in this Module\n\n- How to measure **distance** between two nodes\n- Clustering coefficient\n- Small-world properties\n- A mechanistic model for small-world networks: Watts-Strogatz model\n- Libraries for network analysis\n\n---\n\n## The Small-World Experiment\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n\n**Stanley Milgram (1933-1984)**\n\n- American social psychologist\n- Famous for obedience experiments\n- Conducted groundbreaking research on social networks\n- Revealed surprisingly short chains connecting people\n\n:::\n\n::: {.column width=\"40%\"}\n\n![](https://pinterandmartin.com/cdn/shop/collections/MilgramPhotoNEW.jpg?v=1698922808)\n\n:::\n:::\n\n---\n\n\n::: {.columns}\n\n::: {.column width=\"45%\"}\n\n::: {.incremental}\n:::\n\n:::\n\n::: {.column width=\"55%\"}\n\n![](https://skojaku.github.io/adv-net-sci/figs/milgram-small-world-experiment.png)\n\n:::\n:::\n\n---\n\n2. Recipients in Omaha, Nebraska, and Wichita, Kansas asked to forward a package to a target person in Boston if they knew them\n3. If not, forward to someone they knew who might know the target\n4. Chain continued until reaching the target\n\n![](https://skojaku.github.io/adv-net-sci/figs/milgram-small-world-experiment.png){fig-align=\"center\"}\n\n---\n\n- Out of 160 letters sent, **64 successfully reached** the target\n- Average chain length: **nearly 6 people**\n- Later called **\"six degrees of separation\"**\n\nDespite hundreds of millions of people in the US, their social network was remarkably compact!\n\n![](https://skojaku.github.io/adv-net-sci/figs/milgram-small-world-experiment.png){fig-align=\"center\"}\n\n---\n\n\n\n**Modern Confirmations:**\n\n- **Yahoo Research (2009)**: Email chains, average length ~4-7\n- **Facebook Study (2012)**: 721M users, average path length 4.74\n\n\n![](https://i0.wp.com/socialbarrel.com/wp-content/uploads/2011/08/six-degrees-small-world-facebook-yahoo.jpg){fig-align=\"center\"}\n\n\n## Experiencing Small-World: Wikirace\n\n::: {.columns}\n\n::: {.column width=\"40%\"}\n\n**Play the game**: [WikiRace](https://wiki-race.com)\n\n- Start from one Wikipedia page\n- Navigate to another page using only links\n- Experience how few clicks separate any two topics\n\n:::\n\n::: {.column width=\"60%\"}\n\n![](https://cdn.sparkfun.com/assets/home_page_posts/3/8/8/0/Wikirace.jpeg){fig-align=\"center\"}\n\n:::\n:::\n\n---\n\n**Question ðŸ¤”:**\n\nWhy are people in the world connected by a small number of steps?\n\n---\n\n::: {.columns}\n\n::: {.column width=\"40%\"}\n\nThink about your *family tree*:\n\nHow many ancestors do you have in each generation?\n\n- 1 generation back (parents)\n- 5 generations back?\n- 10 generations back?\n\n\n:::\n\n::: {.column width=\"60%\"}\n\n![](https://waitbutwhy.com/wp-content/uploads/2014/01/tree-128-FEATURE1.png)\n\n:::\n:::\n\n\n::: {.incremental}\n- Ancestors double each generation $\\rightarrow$ **exponential growth**.\n- In social networks, having more than 2 friends means you can reach billions in just a few steps. $\\leftarrow$ [does this explain the small-world property ðŸ¤”?]{.blue-text}\n:::\n\n---\n\n\n\nWait, think about 100 generations back\n\n- 100 generation $\\simeq$ 2000 years\n- The number of ancestors is $2^{100} \\simeq 10^{30}$\n- But, population in 2000 years ago was only 200 million.\n\nThen, what's wrong with the estimate ðŸ¤”?\n\n---\n\n- The family tree isn't a true tree---many ancestors overlap (due to incest).\n- [Local]{.red-text} connections are more common in social networks---*your friends are also friends with each other*.\n- [Exponential growth alone doesn't explain short social distances!]{.blue-text}\n\n![](https://waitbutwhy.com/wp-content/uploads/2014/01/pedigree-collapse.png){fig-align=\"center\"}\n\n## Key question\n\n::: {.incremental}\n- If people are connected locally, then our social networks are NOT small-world.\n- But observations show that it is small-world.\n- So, how can a network have lots of local connections and still remain globally compact ðŸ¤”?\n:::\n\n\n::: {.incremental}\n- Let's make it clear what we mean by [local]{.red-text} and [global]{.blue-text} connections.\n:::\n\n## Clustering Coefficient (1)\n\n[Local clustering]{.red-text} asks: given all your friends, how many of [triangles]{.blue-text} you and your friends form, relative to the maximum possible number of triangles?\n\n$$\nC_i = \\dfrac{\\text{\\# of triangles involving } i \\text{ and its neighbors}}{\\text{\\# of edges possibly exist in the neighborhood of } i}\n$$\n\n::: {.columns}\n\n\n::: {.column width=\"50%\"}\n\n- Node A has 5 neighbors\n- Triangles with A: 2\n- Possible triangles: $\\binom{5}{2} = 10$\n- $C_A = 2/10 = 0.2$\n\n:::\n\n::: {.column width=\"50%\"}\n\n```{dot}\n//| fig-width: 3\n//| fig-height: 2.5\n//| fig-align: center\ngraph G {\n  layout=circo\n  A [shape=circle, fillcolor=\"#f5cbcc\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  B [shape=circle];\n  C [shape=circle];\n  D [shape=circle];\n  E [shape=circle];\n  F [shape=circle];\n\n  A -- B;\n  A -- C;\n  A -- D;\n  A -- E;\n  A -- F;\n  B -- F;\n  C -- E;\n}\n```\n\n:::\n:::\n\n---\n\n```{dot}\n//| fig-width: 3\n//| fig-height: 2.5\n//| fig-align: center\ngraph G {\n  layout=circo\n  A [shape=circle, fillcolor=\"#f5cbcc\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  B [shape=circle, fillcolor=\"#d0e2f3\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  C [shape=circle, fillcolor=\"#fff3cc\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  D [shape=circle];\n  E [shape=circle];\n  F [shape=circle];\n\n  A -- B;\n  A -- D;\n  A -- E;\n  A -- F;\n  B -- F;\n  C -- E;\n  C -- D;\n  B -- C;\n  D -- F;\n}\n```\n\nWhat are the local clustering coefficients of A, B and C?\n\n$$\nC_i = \\dfrac{\\text{# of triangles involving } i \\text{ and its neighbors}}{\\text{# of edges possibly exist in the neighborhood of } i}\n$$\n\n::: {.incremental}\n- A: $2/6 = 1/3$\n- B: $1/3 = 1/3$\n- C: $0$\n:::\n\n\n## Clustering Coefficient (2)\n\n\n[Average clustering coefficient]{.red-text} is the average of the local clustering coefficients of all nodes.\n\n$$\n\\overline{C} = \\dfrac{1}{N} \\sum_{i} C_i\n$$\n\n\n::: {.columns}\n\n::: {.column width=\"50%\"}\n\n$$\n\\overline{C} = \\frac{1}{6}\\left( \\underbrace{\\frac{1}{3}}_{A} + \\underbrace{\\frac{1}{3}}_{B} + \\underbrace{0}_{C} + \\underbrace{\\frac{1}{3}}_{D} + \\underbrace{0}_{E} + \\underbrace{\\frac{2}{3}}_{F} \\right) = \\frac{5}{18}\n$$\n\n:::\n\n::: {.column width=\"50%\"}\n\n```{dot}\n//| fig-width: 3\n//| fig-height: 2.5\n//| fig-align: center\ngraph G {\n  layout=circo\n  A [shape=circle, fillcolor=\"#f5cbcc\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  B [shape=circle, fillcolor=\"#d0e2f3\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  C [shape=circle, fillcolor=\"#fff3cc\", style=\"filled,bold\", penwidth=2, pos=\"0,0!\"];\n  D [shape=circle];\n  E [shape=circle];\n  F [shape=circle];\n\n  A -- B;\n  A -- D;\n  A -- E;\n  A -- F;\n  B -- F;\n  C -- E;\n  C -- D;\n  B -- C;\n  D -- F;\n}\n```\n\n\n:::\n:::\n\n## Clustering Coefficient (3)\n\n[Global clustering coefficient]{.red-text} focuses on the total number of triangles in the network.\n\n$$\nC = \\frac{3 \\times \\text{number of triangles}}{\\text{number of connected triplets}} = \\frac{3 \\times \\text{number of triangles}}{\\sum_{i} k_i(k_i-1)/2}\n$$\n\nwhere $k_i$ is the degree of node $i$.\n\n::: {.columns}\n\n::: {.column width=\"55%\"}\n\n[Connected triplets]{.blue-text} = Three nodes joined by at least two edges.\n[When counting, we distinguish the triplets by the node that is centered]{.red-text}.\nA triangle counts as three triplets. A node with degree $k$ has $k(k-1)/2$ triplets.\n\n:::\n\n::: {.column width=\"45%\"}\n\n\n\n```{dot}\n//| fig-width: 5\n//| fig-height: 2.5\n//| fig-cap: \"Closed triplet (left) and open triplet (right)\"\n//| fig-align: center\ngraph G {\n  layout=neato;\n  fontsize=16;\n\n  node [fontsize=14];\n\n  subgraph cluster_0 {\n    label=\"Closed Triplet\";\n    fontsize=16;\n    style=filled;\n    color=lightgrey;\n    node [shape=circle, fillcolor=\"#f5cbcc\", style=\"filled,bold\", penwidth=2];\n    A1 [pos=\"-1.5,0!\" shape=circle];\n    B1 [pos=\"-2.5,-1!\" shape=circle];\n    C1 [pos=\"-0.5,-1!\" shape=circle];\n    A1 -- B1;\n    B1 -- C1;\n    C1 -- A1;\n  }\n\n  subgraph cluster_1 {\n    label=\"Open Triplet\";\n    fontsize=16;\n    style=filled;\n    color=lightgrey;\n    node [shape=circle, fillcolor=\"#d0e2f3\", style=\"filled,bold\", penwidth=2];\n    A2 [pos=\"1.5,0!\" ];\n    B2 [pos=\"0.5,-1!\" ];\n    C2 [pos=\"2.5,-1!\" ];\n    A2 -- B2;\n    B2 -- C2;\n  }\n}\n```\n\n:::\n:::\n\n---\n\nThree types of clustering coefficients:\n\n1. [Local clustering coefficient]{.red-text} $\\rightarrow$ Density of triangles in a node's neighborhood\n\n2. [Average clustering coefficient]{.red-text} $\\rightarrow$ Average of the local clustering\n\n3. [Global clustering coefficient]{.red-text} $\\rightarrow$ Density of triangles in the entire network\n\nQuestion:\n\n::: {.incremental}\n1. If a network has a high global clustering coefficient, does it necessarily have a high average local clustering coefficient?\n\n2. If not, can you draw a network with high global clustering but low average local clustering coefficient?\n:::\n\n\n## Average Path Length (1)\n\nNow, let's quantify the global connectivity via the average path length.\n\n[Distance]{.red-text} between two nodes $i$ and $j$ is the minimum number of edges you need to traverse to get from one node to the other\n\n::: {.columns}\n\n::: {.column width=\"60%\"}\n\nLet's find the distance between A and D:\n\n- Path 1: A $\\rightarrow$ B $\\rightarrow$ D (2 edges)\n- Path 2: A $\\rightarrow$ C $\\rightarrow$ D (2 edges)\n- Path 3: A $\\rightarrow$ C $\\rightarrow$ B $\\rightarrow$ D (3 edges)\n\nEven though there are multiple paths, the distance from A to D is **2 edges**.\n\n:::\n\n\n::: {.column width=\"40%\"}\n\n\n\n```{dot}\n//| fig-width: 3\n//| fig-height: 2.5\n//| fig-align: center\ngraph G {\n  layout=circo\n  A [shape=circle, fillcolor=\"#f5cbcc\", style=\"filled,bold\", penwidth=2, ];\n  B [shape=circle];\n  C [shape=circle];\n  D [shape=circle];\n  A -- B;\n  A -- C;\n  B -- C;\n  B -- D;\n  C -- D;\n}\n```\n\n:::\n:::\n\n## Average Path Length (2)\n\nAverage path length $L$ is the average distance between any two nodes:\n\n$$\n\\overline{L} = \\frac{2}{N(N-1)} \\sum_{i<j} d_{ij}\n$$\n\nwhere $d_{ij}$ is the shortest path length between node $i$ and node $j$, and $N$ is the number of nodes in the network.\n\n::: {.columns}\n\n::: {.column width=\"40%\"}\n```{dot}\n//| fig-width: 3\n//| fig-height: 2.5\n//| fig-align: center\ngraph G {\n  layout=circo\n  A [shape=circle, fillcolor=\"#f5cbcc\", style=\"filled,bold\", penwidth=2, ];\n  B [shape=circle];\n  C [shape=circle];\n  D [shape=circle];\n  A -- B;\n  A -- C;\n  B -- C;\n  B -- D;\n  C -- D;\n}\n```\n:::\n\n::: {.column width=\"60%\"}\n\n$$\n\\begin{aligned}\nL &= \\frac{1}{6} \\left( \\underbrace{1}_{A-B} + \\underbrace{1}_{A-C} + \\underbrace{2}_{A-D} + \\underbrace{1}_{B-C} + \\underbrace{1}_{B-D} + \\underbrace{1}_{C-D} \\right) \\\\\n&= \\frac{7}{6} \\simeq 1.16\n\\end{aligned}\n$$\n:::\n:::\n\n---\n\n\n[Small-world networks]{.red-text} are networks that have both *high clustering coefficient* and *short average path length*.\n\nAnd we can quantify the \"small-worldness\" of a network by, for example,\n\n$$\n\\sigma_{\\text{naive}} = \\dfrac{\\text{average clustering coefficient}}{\\text{average path length}}\n$$\n\n\n::: {.incremental}\n- But there is a problem ðŸ¤”\n- Both clustering coefficient and average path length are correlated with the number of nodes $N$ and edges $M$.\n- Example: A small network has short average path length. Dense network has high clustering.\n:::\n\n---\n\n::: {.incremental}\n- Let's control for the effect of the number of nodes $N$ and edges $M$.\n- Think about rewiring the edges of the network randomly---this is called [ErdÅ‘s-RÃ©nyi random graph](https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93R%C3%A9nyi_model).\n- This random network has the same number of nodes and edges but would have a different $\\sigma_{\\text{naive}}$ value.\n- Denoted by $\\sigma_{\\text{random}}$ the average of $\\sigma_{\\text{naive}}$ over many random networks.\n- We normalize $\\sigma_{\\text{naive}}$ by $\\sigma_{\\text{random}}$:\n$$\n\\sigma = \\dfrac{\\sigma_{\\text{naive}}}{\\sigma_{\\text{random}}}\n$$\n- If $\\sigma > 1$, the network is small-world more than random networks.\n:::\n\n---\n\n## Small-world Coefficient\n\n$$\n\\sigma = \\dfrac{\\sigma_{\\text{naive}}}{\\sigma_{\\text{random}}}\n$$\n\n- $\\sigma > 1$: Strong small-world property\n- $\\sigma \\approx 1$: Comparable to random network\n- $\\sigma < 1$: Anti-small-world\n\nFor ErdÅ‘s-RÃ©nyi Random Graphs, we have:\n\n$$\n\\sigma_{\\text{random}} = \\dfrac{\\overline{C}_{\\text{random}}}{\\overline{L}_{\\text{random}}},\\quad\n\\overline{C}_{\\text{random}} \\approx \\dfrac{\\langle k \\rangle}{N-1},\\quad\n\\overline{L}_{\\text{random}} \\approx \\dfrac{\\ln N}{\\ln \\langle k \\rangle}\n$$\n\nwhere $\\langle k \\rangle$ is the average degree. See the lecture note for the derivation.\n\n---\n\nNow, we have a way to quantify the small-worldness of a network.\n\nBut we still don't know *why small-world networks emerge*.\n\n::: {.columns}\n\n::: {.column width=\"60%\"}\n\n> \"What I cannot create, I do not understand\"\n>\n> ---Richard Feynman\n\nWhat are the mechanism behind the small-world phenomenon ðŸ¤”?\n\n:::\n\n::: {.column width=\"40%\"}\n\n![](https://cdn.britannica.com/83/21083-050-C53FAB08/Richard-Feynman.jpg){fig-align=\"center\"}\n\n:::\n:::\n\n\n## The Watts-Strogatz Model\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n**Step 1:** Create ring of $N$ nodes connected to $k$ nearest neighbors\n\n- High clustering, long paths\n\n**Step 2:** Randomly rewire each edge with probability $p$\n\n- $p = 0$: regular lattice\n- $p = 1$: random graph\n- $0 < p < 1$: small-world\n\n:::\n\n::: {.column width=\"55%\"}\n\n![](figs/watts-strogatz.png)\n\n:::\n:::\n\n---\n\n<iframe\n  src=\"https://marimo.app/https://github.com/skojaku/adv-net-sci/blob/main/docs/lecture-note/assets/marimo/watts_strogatz_wasm.py?embed=true&show-chrome=false&mode=app\"\n  width=\"100%\"\n  height=\"1000\"\n  frameborder=\"0\"\n></iframe>\n\n---\n\n## Why Small-World Emerges\n\n**The Mechanism:**\n\n- Start with local clustering (ring lattice)\n- Add a few long-range connections (rewiring)\n- These \"shortcuts\" dramatically reduce path lengths\n- Maintains high clustering while creating short paths\n\n**Examples:**\n\n- Biological networks: Neurons with local + long-range connections\n- Technological networks: Internet with regional + continental links\n- Social networks: Local friends + distant acquaintances\n\n---\n\n## Key Takeaways\n\n1. **Small-world networks** combine high clustering with short path lengths\n2. **Milgram's experiment** revealed \"six degrees of separation\"\n3. **Watts-Strogatz model** explains the mechanism through edge rewiring\n4. **Quantification** possible through clustering coefficients and path lengths\n5. **Long-range connections** are key to the small-world phenomenon\n\n**Next:** We'll learn to compute shortest paths and connected components using igraph\n\n\n## Convenient libraries for network analysis\n\n::: {.columns}\n\n::: {.column width=\"50%\"}\n- [networkx](https://networkx.org/) - a beginner-friendly library for network analysis\n- [igraph](https://igraph.org/python/) - a mature library with a wide range of algorithms\n- [graph-tool](https://graph-tool.skewed.de/) - specialized for stochastic block models\n- [scipy](https://scipy.org/) - efficient tools for analyzing large networks\n\n:::\n\n::: {.column width=\"45%\"}\n\n![](./figs/scipy.jpg)\n\n:::\n:::\n\nThroughout this course, we'll primarily use `igraph`, a mature and robust library originally developed for R and later ported to Python.\n\n# Let's code! ðŸš€ {.center}\n\n\n## First Step: Choose a notebook to work on\n\n**Marimo:**\n\n[https://github.com/skojaku/adv-net-sci/notebooks/m02-small-world/starter.py](https://github.com/skojaku/adv-net-sci/notebooks/m02-small-world/starter.py)\n\nOpen the terminal and run:\n```bash\nmarimo edit --sandbox starter.py\n```\nor via `uv`\n```bash\nuvx marimo edit starter.py\n```\n\n**Jupyter Notebook:**\n\n[https://github.com/skojaku/adv-net-sci/notebooks/m02-small-world/starter.ipynb](https://github.com/skojaku/adv-net-sci/notebooks/m02-small-world/starter.ipynb)\n\n\n---\n\n## Toy network\n\n```{.python}\nimport igraph\n\nedge_list = [(0, 1), (1, 2), (0, 2), (0, 3)]\n\ng = igraph.Graph() # Create an empty graph\ng.add_vertices(4) # Add 4 vertices\ng.add_edges(edge_list) # Add edges to the graph\n```\n\nPlot the graph.\n```{.python}\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(5, 5))\n\n# Draw the graph on the matplotlib axes using igraph\nigraph.plot(\n    g,\n    bbox=(50, 50),\n    vertex_label=list(range(4)),\n    target=ax,\n)\n```\n\n## Path\n\nSimple paths:\n```{.python}\ng.get_all_simple_paths(2, to=3)\n```\n\nShortest path:\n```{.python}\n# Shortest path\ng.get_shortest_paths(2, to=3)\n```\n\nDistance:\n```{.python}\n# Distance\ng.distances(2, 3)\n```\n\n## Connected Components\n\nFind connected components:\n```{.python}\ncomponents = g.connected_components()\n```\n\nMembership:\n```{.python}\ncomponents.membership\n```\n\nSize:\n```{.python}\ncomponents.size\n```\n\nThe largest connected component:\n```{.python}\ncomponents.giant()\n```\n\n## Clustering coefficient\n\n\nLocal clustering coefficient:\n\n```{.python}\ng_cluster.transitivity_local_undirected()\n```\n\nAverage clustering coefficient:\n```{.python}\ng_cluster.transitivity_avglocal_undirected()\n```\n\nGlobal clustering coefficient:\n```{.python}\ng_cluster.transitivity_undirected()\n```\n\n\n## Watts-Strogatz Model\n\n```{.python}\nn_ws = 30 # Number of nodes\nk_ws = 6 # Number of nearest neighbors in the ring lattice\np_rewire = 0.1 # Probability of rewiring each edge\n\ng_smallworld = igraph.Graph.Watts_Strogatz(\n    dim=1,\n    size=n_ws,\n    nei=k_ws // 2,\n    p=p_rewire,\n)\n```\n\nCompute the small-worldness $\\sigma$ using the formula below:\n\n$$\n\\sigma = \\dfrac{\\sigma_{\\text{naive}}}{\\sigma_{\\text{random}}}, \\; \\text{where}\\;\n\\sigma_{\\text{naive}} = \\dfrac{\\text{average clustering coefficient}}{\\text{average path length}}\n$$\n\n$$\n\\sigma_{\\text{random}} = \\dfrac{\\overline{C}_{\\text{random}}}{\\overline{L}_{\\text{random}}},\\; \\overline{C}_{\\text{random}} \\approx \\dfrac{\\langle k \\rangle}{N-1},\\;\n\\overline{L}_{\\text{random}} \\approx \\dfrac{\\ln N}{\\ln \\langle k \\rangle}\n$$\n\n\n## What's Next?\n\n\n::: {.columns}\n\n\n::: {.column width=\"50%\"}\n\nModule 03: Network Robustness\n\nDoes a network remain connected when one or more nodes fail?\n\n:::\n\n::: {.column width=\"50%\"}\n\n![](https://www.energyconnects.com/media/nska0lrh/bloomburgmedia_sgnch4dwrgg000_15-07-2024_06-13-24_638565984000000000.jpg?width=1200&height=800){fig-align=\"center\"}\n\n:::\n:::\n\n",
    "supporting": [
      "slide02_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}